/* styles/LevelSelectPage.module.css */
/* Убедитесь, что CSS переменные и шрифты доступны */
:root {
  --gd-blue: #3e87ff;
  --gd-green: #55dd00;
  --gd-yellow: #ffff00;
  --gd-text-light: #ffffff;
  --bg-dark: #2c3044;
  --card-bg: rgba(255, 255, 255, 0.05);
  --card-border: rgba(255, 255, 255, 0.1);
  --card-locked-bg: rgba(0, 0, 0, 0.4);
  --card-locked-border: rgba(255, 255, 255, 0.05);
}

.pageContainer {
  min-height: 100vh;
  padding: 40px 20px;
  background: var(--bg-dark);
  color: var(--gd-text-light);
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: 'Pusher', 'Arial Black', sans-serif;
  overflow-x: hidden; /* Предотвращаем горизонтальный скролл из-за анимаций */
}

.pageTitle {
  font-size: 3.5rem;
  color: var(--gd-yellow);
  text-shadow: 2px 2px 0 var(--gd-blue), 4px 4px 0px rgba(0,0,0,0.2);
  margin-bottom: 40px;
  animation: titleEntrance 0.7s ease-out;
}

@keyframes titleEntrance {
  from { opacity: 0; transform: translateY(-30px); }
  to { opacity: 1; transform: translateY(0); }
}

.levelGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Адаптивная сетка */
  gap: 30px;
  width: 100%;
  max-width: 1000px; /* Ограничиваем ширину сетки */
  margin-bottom: 40px;
}

.levelCard {
  background: var(--card-bg);
  border: 2px solid var(--card-border);
  border-radius: 15px;
  padding: 25px;
  text-align: center;
  cursor: pointer;
  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.3s ease;
  position: relative; /* Для оверлея замка */
  overflow: hidden; /* Для эффектов */
  box-shadow: 0 5px 15px rgba(0,0,0,0.2);
  animation: cardPopIn 0.5s ease-out forwards;
  opacity: 0; /* Начальное состояние для анимации */
}

/* Задержка анимации для каждой карточки */
.levelCard:nth-child(1) { animation-delay: 0.1s; }
.levelCard:nth-child(2) { animation-delay: 0.15s; }
.levelCard:nth-child(3) { animation-delay: 0.2s; }
.levelCard:nth-child(4) { animation-delay: 0.25s; }
/* ... и так далее для остальных карточек ... */


@keyframes cardPopIn {
  from { transform: scale(0.8) translateY(20px); opacity: 0; }
  to { transform: scale(1) translateY(0); opacity: 1; }
}


.levelCard:hover {
  transform: translateY(-10px) scale(1.05);
  box-shadow: 0 10px 25px rgba(var(--gd-blue-rgb, 62, 135, 255), 0.3); /* Для тени используем RGB версию цвета */
}

.levelNumber {
  font-size: 3rem;
  font-weight: bold;
  color: var(--gd-blue);
  margin-bottom: 10px;
  line-height: 1;
}

.levelName {
  font-size: 1.4rem;
  margin-bottom: 5px;
  color: var(--gd-text-light);
}

.levelCard.locked {
  background: var(--card-locked-bg);
  border-color: var(--card-locked-border);
  cursor: not-allowed;
  color: rgba(255,255,255,0.4);
}

.levelCard.locked .levelNumber,
.levelCard.locked .levelName {
  opacity: 0.5;
}


.levelCard.locked:hover {
  transform: none; /* Убираем эффект наведения для заблокированных */
  box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

.lockOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 13px; /* Чуть меньше, чем у карточки */
}

.lockOverlay svg {
  width: 50px;
  height: 50px;
  color: var(--gd-yellow);
  filter: drop-shadow(0 0 5px var(--gd-yellow));
}


.backButton {
  padding: 12px 30px;
  font-size: 1.2rem;
  font-family: 'Pusher', sans-serif;
  font-weight: bold;
  color: var(--gd-text-light);
  background: var(--gd-blue);
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
  box-shadow: 0 3px 8px rgba(0,0,0,0.3);
}

.backButton:hover {
  background-color: var(--gd-green);
  transform: translateY(-2px);
}

/* Для тени в .levelCard:hover */
/* Если у вас нет переменной --gd-blue-rgb, определите ее в :root или используйте прямой цвет */
:root {
  --gd-blue-rgb: 62, 135, 255; /* RGB компоненты для gd-blue */
}